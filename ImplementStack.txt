package Assignment15;

import java.util.Stack;

class MinStack 
{
    private Stack<Integer> stack;
    private Stack<Integer> minStack;
    public MinStack() 
    {
        stack = new Stack<>();
        minStack = new Stack<>();
    }
    public void push(int val) 
    {
        stack.push(val);
        if (minStack.isEmpty() || val <= minStack.peek()) 
        {
            minStack.push(val);
        }
    }
    public void pop() 
    {
        int val = stack.pop();
        if (val == minStack.peek()) 
        {
            minStack.pop();
        }
    }
    public int top() 
    {
        return stack.peek();
    }
    public int getMin() 
    {
        return minStack.peek();
    }
}
public class ImplementStack 
{
    public static void main(String[] args) 
    {
        MinStack minStack = new MinStack();
        minStack.push(-2);
        minStack.push(0);
        minStack.push(-3);
        System.out.print(minStack.getMin());
        System.out.print(" ");
        minStack.pop();
        System.out.print(minStack.top()); 
        System.out.print(" ");
        System.out.print(minStack.getMin()); 
    }
}

